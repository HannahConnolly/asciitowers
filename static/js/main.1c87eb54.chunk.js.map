{"version":3,"sources":["Hand.js","Turn.js","Alert.js","Instructions.js","Game.js","App.js","index.js"],"names":["Hand","props","win","react_default","a","createElement","turns","num","Turn","turn","Alert","alert","Instructions","href","Game","state","board","hand","displayTower","tower","map","x","key","Math","random","buttonClick","_this","newboard","setState","checkWin","render","_this2","this","className","Container_default","src_Hand","onClick","e","justify-content","align-items","src_Turn","src_Alert","src_Instructions","React","Component","App","src_Game","ReactDOM","src_App","document","querySelector"],"mappings":"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","file":"static/js/main.1c87eb54.chunk.js","sourcesContent":["import React from 'react';\n\nconst Hand = props => {\n  if (props.win === true) {\n    return <h2>You win! turns: {props.turns}</h2>;\n  }\n  if (props.num !== 0) {\n    return <h2> Hand: {props.num}</h2>;\n  } else {\n    return <h2> Hand: </h2>;\n  }\n};\n\nexport default Hand;\n","import React from 'react';\n\nconst Turn = props => {\n  return <h2> Turns: {props.turn}</h2>;\n};\n\nexport default Turn;\n","import React from 'react';\n\nconst Alert = props => {\n  if (props.alert === 0) {\n    return (\n      <div>\n        <h3>.</h3>\n      </div>\n    );\n  }\n  if (props.alert === 'EMPTY') {\n    return <h2>Error! column empty</h2>;\n  } else if (props.alert === 'NUM_LARGER') {\n    return <h2>Error! Number in hand is larger than stack</h2>;\n  } else if (props.alert === 'WIN') {\n    return <h2>Winner Winner Chicken Dinner!</h2>;\n  }\n  return <div />;\n};\n\nexport default Alert;\n","import React from 'react';\n\nconst Instructions = () => {\n  return (\n    <div>\n      <h3>Instructions</h3>\n      <p>\n        In the Tower of Hanoi puzzle a player attempts to move a large pile of\n        disks, known as the Tower, from the leftmost peg to the rightmost on the\n        puzzle board. The rules of the puzzle state that the player can only\n        move one disk per turn and can never place a larger disk onto a smaller\n        one at any time.\n      </p>\n      <a href='http://www.chessandpoker.com/tower-of-hanoi.html'>\n        Rules and further reading\n      </a>\n      <br />\n      <a href='https://semantic-ui.com/'>Created with semantic UI</a>\n      <br />\n      <p>created by Hannah Connolly</p>\n    </div>\n  );\n};\n\nexport default Instructions;\n","import React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport './App.css';\nimport Hand from './Hand';\nimport Turn from './Turn';\nimport Alert from './Alert';\nimport Instructions from './Instructions';\nclass Game extends React.Component {\n  state = {\n    board: [\n      [1, 2, 3, 4, 5],\n      ['|', '|', '|', '|', '|'],\n      ['|', '|', '|', '|', '|']\n    ],\n    hand: 0,\n    turn: 0\n  };\n\n  render() {\n    return (\n      <div>\n        <div className='ui segment'>\n          <Container className='hand'>\n            <Hand num={this.state.hand} />\n          </Container>\n          <div className='ui divider' />\n          <div className='ui three column centered aligned divided grid'>\n            <div className='three wide column'>\n              {this.displayTower(this.state.board[0])}\n              <br />\n              <button onClick={e => this.buttonClick(0, e)}>Interact</button>\n            </div>\n            <div className='three wide column'>\n              <div justify-content='center' align-items='center'>\n                {this.displayTower(this.state.board[1])}\n              </div>\n              <br />\n              <button onClick={e => this.buttonClick(1, e)}>Interact</button>\n            </div>\n            <div className='three wide column'>\n              {this.displayTower(this.state.board[2])}\n              <br />\n              <button onClick={e => this.buttonClick(2, e)}>Interact</button>\n            </div>\n          </div>\n          <div className='ui divider' />\n          <Container className='hand'>\n            <Turn turn={this.state.turn} />\n          </Container>\n        </div>\n        <Container className='hand'>\n          <Alert alert={this.state.alert} />\n        </Container>\n        <div className='ui segment'>\n          <Instructions />\n        </div>\n      </div>\n    );\n  }\n\n  displayTower = tower => {\n    var towerDisp = [];\n    towerDisp = tower.map(x => {\n      return <div key={Math.random()}>{x}</div>;\n    });\n\n    return towerDisp;\n  };\n\n  buttonClick = num => {\n    if (this.state.win === true) {\n      return;\n    }\n\n    // reset alert\n    this.setState({ alert: 0 });\n    var newboard;\n    var x;\n\n    // check if hand is empty\n    if (this.state.hand === 0) {\n      //check if board is empty\n      if (this.state.board[num][4] === '|' && this.state.hand === 0) {\n        this.setState({ alert: 'EMPTY' });\n        return;\n      }\n\n      // check for num to pick up\n      x = 0;\n      while (this.state.board[num][x] === '|' && x < 5) {\n        x++;\n      }\n      this.setState({ hand: this.state.board[num][x] });\n      newboard = this.state.board;\n      newboard[num][x] = '|';\n      this.setState({ board: newboard });\n    } else {\n      // hand not empty - begin place\n      x = 0;\n      while (this.state.board[num][x] === '|' && x < 5) {\n        // check for next var\n        x++;\n        // check for empty column\n        if (x === 4 && this.state.board[num][x] === '|') {\n          newboard = this.state.board;\n          newboard[num][4] = this.state.hand;\n          this.setState({ board: newboard });\n          this.setState({ hand: 0 });\n          this.setState({ turn: this.state.turn + 1 });\n          this.checkWin();\n          return;\n        } else {\n          this.render();\n        }\n      }\n      // check if num is smaller\n      if (this.state.hand < this.state.board[num][x] && x !== 0) {\n        newboard = this.state.board;\n        newboard[num][x - 1] = this.state.hand;\n        this.setState({ board: newboard });\n        this.setState({ hand: 0 });\n        this.setState({ turn: this.state.turn + 1 });\n        this.checkWin();\n        return;\n      } else {\n        this.setState({ alert: 'NUM_LARGER' });\n        this.render();\n      }\n    }\n    if (this.state.win === true) {\n    }\n    this.render();\n  };\n\n  checkWin() {\n    if (this.state.board[2][0] === 1) {\n      this.setState({ alert: 'WIN' });\n    }\n  }\n}\n\nexport default Game;\n","import React from 'react';\nimport Game from './Game';\n\nfunction App() {\n  return (\n    <div className='App'>\n      <header className='App-header'>\n        <h1>Towers of Hanoi</h1>\n      </header>\n      <Game />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './App.css';\n\nReactDOM.render(<App />, document.querySelector('#root'));\n"],"sourceRoot":""}