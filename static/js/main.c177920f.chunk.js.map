{"version":3,"sources":["Hand.js","Turn.js","Alert.js","Instructions.js","Game.js","App.js","index.js"],"names":["Hand","props","win","react_default","a","createElement","turns","num","ascii","i","Turn","turn","Alert","alert","Instructions","href","Game","state","board","hand","htory","displayTower","tower","map","x","key","Math","random","buttonClick","_this","newboard","setState","checkWin","render","_this2","this","buttonText","window","innerWidth","className","Container_default","src_Turn","text-align","justify-content","buttonColor","onClick","align-items","src_Hand","src_Alert","src_Instructions","id","col","console","log","topNum","React","Component","App","src_Game","ReactDOM","src_App","document","querySelector"],"mappings":"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","file":"static/js/main.c177920f.chunk.js","sourcesContent":["import React from 'react';\n\nconst Hand = props => {\n  if (props.win === true) {\n    return <h2>You win! turns: {props.turns}</h2>;\n  }\n  if (props.num !== 0) {\n    var ascii = 'I';\n    for (var i = 0; i < props.num - 1; i++) {\n      ascii += 'II';\n    }\n    return <h2> Hand: {ascii}</h2>;\n  }\n  return <h2> Hand: </h2>;\n};\n\nexport default Hand;\n","import React from 'react';\n\nconst Turn = props => {\n  return <h2> Turns: {props.turn}</h2>;\n};\n\nexport default Turn;\n","import React from 'react';\n\nconst Alert = props => {\n  if (props.alert === 0) {\n    return (\n      <div>\n        <h2> </h2>\n      </div>\n    );\n  }\n  if (props.alert === 'EMPTY') {\n    return <h2>Error! column empty</h2>;\n  } else if (props.alert === 'NUM_LARGER') {\n    return <h2>Error! Number in hand is larger than stack</h2>;\n  } else if (props.alert === 'WIN') {\n    return <h2>Winner Winner Chicken Dinner!</h2>;\n  }\n  return <div />;\n};\n\nexport default Alert;\n","import React from 'react';\n\nconst Instructions = () => {\n  return (\n    <div>\n      <h3>Instructions</h3>\n      <p>\n        In the Tower of Hanoi puzzle a player attempts to move a large pile of\n        disks, known as the Tower, from the leftmost peg to the rightmost on the\n        puzzle board. The rules of the puzzle state that the player can only\n        move one disk per turn and can never place a larger disk onto a smaller\n        one at any time.\n      </p>\n      <a href='http://www.chessandpoker.com/tower-of-hanoi.html'>\n        Rules and further reading\n      </a>\n      <br />\n      <a href='https://semantic-ui.com/'>Styled using semantic UI</a>\n      <br />\n      <a href='https://github.com/HannahConnolly'>Created by Hannah Connolly</a>\n    </div>\n  );\n};\n\nexport default Instructions;\n","import React from 'react';\nimport Container from 'react-bootstrap/Container';\n\nimport './App.css';\nimport Hand from './Hand';\nimport Turn from './Turn';\nimport Alert from './Alert';\nimport Instructions from './Instructions';\n\nclass Game extends React.Component {\n  state = {\n    board: [\n      [1, 2, 3, 4, 5],\n      [':', ':', ':', ':', ':'],\n      [':', ':', ':', ':', ':']\n    ],\n    alert: 0,\n    hand: 0,\n    turn: 0,\n    htory: [[[]]]\n  };\n\n  render() {\n    const isMobile = window.innerWidth <= 800;\n    var buttonText = '';\n\n    if (isMobile) buttonText = ' ';\n    else buttonText = 'Interact';\n\n    return (\n      <div>\n        <div className='ui segment'>\n          <Container className='component'>\n            <Turn turn={this.state.turn} />\n          </Container>\n          <div className='ui divider' />\n          <div className='ui equal width center aligned grid'>\n            <div\n              className='three wide column'\n              text-align='center'\n              justify-content='center'\n            >\n              {this.displayTower(this.state.board[0])}\n              <br />\n              <button\n                className={this.buttonColor(0)}\n                onClick={() => this.buttonClick(0)}\n              >\n                {buttonText}\n              </button>\n            </div>\n            <div className='three wide column'>\n              <div\n                justify-content='center'\n                align-items='center'\n                text-align='center'\n              >\n                {this.displayTower(this.state.board[1])}\n              </div>\n              <br />\n              <button\n                className={this.buttonColor(1)}\n                onClick={() => this.buttonClick(1)}\n              >\n                {buttonText}\n              </button>\n            </div>\n            <div\n              className='three wide column'\n              text-align='center'\n              justify-content='center'\n            >\n              {this.displayTower(this.state.board[2])}\n              <br />\n              <button\n                className={this.buttonColor(2)}\n                onClick={() => this.buttonClick(2)}\n              >\n                {buttonText}\n              </button>\n            </div>\n          </div>\n          <div className='ui divider' />\n          <Container className='component'>\n            <Hand num={this.state.hand} />\n          </Container>\n        </div>\n        <Container className='component'>\n          <Alert alert={this.state.alert} />\n        </Container>\n        <div className='ui segment'>\n          <Instructions />\n        </div>\n        <canvas id='my-canvas'></canvas>\n      </div>\n    );\n  }\n\n  displayTower = tower => {\n    var towerDisp = [];\n    towerDisp = tower.map(x => {\n      if (x === ':') return <div key={Math.random()}>:</div>;\n      var ascii = 'I';\n      for (var i = 0; i < x - 1; i++) {\n        ascii += 'II';\n      }\n      return <div key={Math.random()}>{ascii}</div>;\n    });\n\n    return towerDisp;\n  };\n\n  buttonClick = num => {\n    if (this.state.win === true) {\n      return;\n    }\n\n    // reset alert message\n    this.setState({ alert: 0 });\n    var newboard;\n    var x;\n\n    // check if hand is empty\n    if (this.state.hand === 0) {\n      //check if board is empty\n      if (this.state.board[num][4] === ':' && this.state.hand === 0) {\n        this.setState({ alert: 'EMPTY' });\n        return;\n      }\n\n      // check for num to pick up\n      x = 0;\n      while (this.state.board[num][x] === ':' && x < 5) {\n        x++;\n      }\n      this.setState({ hand: this.state.board[num][x] });\n      newboard = this.state.board;\n      newboard[num][x] = ':';\n      this.setState({ board: newboard });\n    } else {\n      // hand not empty - begin place\n      x = 0;\n      while (this.state.board[num][x] === ':' && x < 5) {\n        // check for next var\n        x++;\n        // check for empty column\n        if (x === 4 && this.state.board[num][x] === ':') {\n          newboard = this.state.board;\n          newboard[num][4] = this.state.hand;\n          this.setState({ board: newboard });\n          this.setState({ hand: 0 });\n          this.setState({ turn: this.state.turn + 1 });\n          this.checkWin();\n          return;\n        } else {\n          this.render();\n        }\n      }\n      // check if num is smaller\n      if (this.state.hand < this.state.board[num][x] && x !== 0) {\n        newboard = this.state.board;\n        newboard[num][x - 1] = this.state.hand;\n        this.setState({ board: newboard });\n        this.setState({ hand: 0 });\n        this.setState({ turn: this.state.turn + 1 });\n        this.checkWin();\n        return;\n      } else {\n        this.setState({ alert: 'NUM_LARGER' });\n        this.render();\n      }\n    }\n    if (this.state.win === true) {\n    }\n    this.render();\n  };\n\n  checkWin() {\n    if (this.state.board[2][0] === 1) {\n      this.setState({ alert: 'WIN' });\n    }\n  }\n\n  buttonColor(col) {\n    console.log('hand: ', this.state.hand);\n    if (this.state.board[col][4] === ':' && this.state.hand !== '0') {\n      return 'ui grey button';\n    }\n    var topNum;\n    for (var i = 0; i < 5; i++) {\n      if (this.state.board[col][i] !== ':') {\n        topNum = this.state.board[col][i];\n        break;\n      }\n    }\n    if (topNum < this.state.hand && this.state.hand !== 0) {\n      return 'ui grey button';\n    }\n\n    return 'ui blue button';\n  }\n}\n\nexport default Game;\n","import React from 'react';\nimport Game from './Game';\n\nfunction App() {\n  return (\n    <div>\n      <div className='App'>\n        <header className='App-header'>\n          <h1>Towers of Hanoi</h1>\n        </header>\n        <Game />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './App.css';\n\nReactDOM.render(<App />, document.querySelector('#root'));\n"],"sourceRoot":""}